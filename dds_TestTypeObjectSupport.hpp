// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (Intellectus).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_TestTypeObjectSupport.hpp
 * Header file containing the API required to register the TypeObject representation of the described types in the IDL file
 *
 * This file was generated by the tool int2ddsgen (version: 4.1.0).
 */

#ifndef INT2_DDS_GENERATED__DDS_TEST_TYPE_OBJECT_SUPPORT_HPP
#define INT2_DDS_GENERATED__DDS_TEST_TYPE_OBJECT_SUPPORT_HPP

#include <int2dds/dds/xtypes/type_representation/TypeObject.hpp>


#if defined(_WIN32)
#if defined(INTELLECTUS_USER_DLL_EXPORT)
#define Intellectus_user_DllExport __declspec( dllexport )
#else
#define Intellectus_user_DllExport
#endif  // INTELLECTUS_USER_DLL_EXPORT
#else
#define Intellectus_user_DllExport
#endif  // _WIN32

#ifndef DOXYGEN_SHOULD_SKIP_THIS_PUBLIC

/**
 * @brief Register Image related TypeIdentifier.
 *        Fully-descriptive TypeIdentifiers are directly registered.
 *        Hash TypeIdentifiers require to fill the TypeObject information and hash it, consequently, the TypeObject is
 *        indirectly registered as well.
 *
 * @param[out] TypeIdentifier of the registered type.
 *             The returned TypeIdentifier corresponds to the complete TypeIdentifier in case of hashed TypeIdentifiers.
 *             Invalid TypeIdentifier is returned in case of error.
 */
Intellectus_user_DllExport void register_Image_type_identifier(
        intellectus::int2dds::dds::xtypes::TypeIdentifierPair& type_ids);


#endif // DOXYGEN_SHOULD_SKIP_THIS_PUBLIC

#endif // INT2_DDS_GENERATED__DDS_TEST_TYPE_OBJECT_SUPPORT_HPP
